setwd("./Result data/")
load("density31.RData")
load("density32.RData")
load("density33.RData")
load("density34.RData")
load("density41.RData")
load("density42.RData")
load("density43.RData")
load("density44.RData")
Iteration <- 1000
## gamma=1/3 ##
value1df <- data.frame(value1 = density31[1:Iteration])
fig1 <- ggplot(data = value1df, aes(x = value1)) + geom_histogram(aes(y = ..density..), fill="#377eb8", color="black", alpha=0.6, stat = "bin", bins = 20) +
stat_function(fun = dnorm, colour = "red", size = 1)+xlab("") + theme_classic()
library(ggplot2)
library(softImpute)
library(latex2exp)
## gamma=1/3 ##
value1df <- data.frame(value1 = density31[1:Iteration])
fig1 <- ggplot(data = value1df, aes(x = value1)) + geom_histogram(aes(y = ..density..), fill="#377eb8", color="black", alpha=0.6, stat = "bin", bins = 20) +
stat_function(fun = dnorm, colour = "red", size = 1)+xlab("") + theme_classic()
fig1
library(ggplot2)
library(softImpute)
N <- Ti <- 1000
rreal <- 10
set.seed(1124)
M1 <- matrix(runif(N*Ti, -10, 10), nrow = N, ncol = Ti)
M0 <- M1 + matrix(runif(N*Ti, -2, 2), nrow = N, ncol = Ti)
U1 <- svd(M1)$u[,1:rreal] %*% diag(c(sqrt(svd(M1)$d)[1:rreal]))
V1 <- svd(M1)$v[,1:rreal] %*% diag(c(sqrt(svd(M1)$d)[1:rreal]))
U0 <- svd(M0)$u[,1:rreal] %*% diag(c(sqrt(svd(M0)$d)[1:rreal]))
V0 <- svd(M0)$v[,1:rreal] %*% diag(c(sqrt(svd(M0)$d)[1:rreal]))
M1 <- U1 %*% t(V1)
M0 <- U0 %*% t(V0)
lmax <- max(svd(M1)$d[1], svd(M0)$d[1])
lmin <- min(svd(M1)$d[rreal], svd(M1)$d[rreal])
lmin^2
lmin <- min(svd(M1)$d[rreal], svd(M1)$d[rreal])
N <- Ti <- 300
rreal <- 5
set.seed(1124)
M1 <- matrix(runif(N*Ti, -10, 10), nrow = N, ncol = Ti)
M0 <- M1 + matrix(runif(N*Ti, -2, 2), nrow = N, ncol = Ti)
U1 <- svd(M1)$u[,1:rreal] %*% diag(c(sqrt(svd(M1)$d)[1:rreal]))
V1 <- svd(M1)$v[,1:rreal] %*% diag(c(sqrt(svd(M1)$d)[1:rreal]))
U0 <- svd(M0)$u[,1:rreal] %*% diag(c(sqrt(svd(M0)$d)[1:rreal]))
V0 <- svd(M0)$v[,1:rreal] %*% diag(c(sqrt(svd(M0)$d)[1:rreal]))
M1 <- U1 %*% t(V1)
M0 <- U0 %*% t(V0)
lmax <- max(svd(M1)$d[1], svd(M0)$d[1])
lmin <- min(svd(M1)$d[rreal], svd(M1)$d[rreal])
lmin^2
N <- Ti <- 300
rreal <- 5
set.seed(1124)
M1 <- matrix(runif(N*Ti, -1, 1), nrow = N, ncol = Ti)
M0 <- M1 + matrix(runif(N*Ti, -1, 1), nrow = N, ncol = Ti)
U1 <- svd(M1)$u[,1:rreal] %*% diag(c(sqrt(svd(M1)$d)[1:rreal]))
V1 <- svd(M1)$v[,1:rreal] %*% diag(c(sqrt(svd(M1)$d)[1:rreal]))
U0 <- svd(M0)$u[,1:rreal] %*% diag(c(sqrt(svd(M0)$d)[1:rreal]))
V0 <- svd(M0)$v[,1:rreal] %*% diag(c(sqrt(svd(M0)$d)[1:rreal]))
M1 <- U1 %*% t(V1)
M0 <- U0 %*% t(V0)
lmax <- max(svd(M1)$d[1], svd(M0)$d[1])
lmin <- min(svd(M1)$d[rreal], svd(M1)$d[rreal])
lmin^2
M10 <- M00 <- matrix(NA, nrow = N, ncol = Ti)
ran <- sample(c(1:(N*Ti)), 0.1*rreal^2*N*log(N), replace = FALSE)
ran <- sample(c(1:(N*Ti)), 0.5*rreal^2*N*log(N), replace = FALSE)
M10[ran] <- M1[ran] + rnorm(length(ran))
fit1 <- softImpute(M10, rank.max = 10, lambda = 0.5)
M10 <- complete(M10, fit1)
sum((M1-M10)^2)
sum((M1-M10)^2) / lmin^2
ran <- sample(c(1:(N*Ti)), 0.1*rreal^2*N*log(N), replace = FALSE)
M00[ran] <- M0[ran] + rnorm(length(ran))
fit2 <- softImpute(M00, rank.max = 10, lambda = 0.5)
M00 <- complete(M00, fit2)
sum((M0-M00)^2) / lmin^2
ran <- sample(c(1:(N*Ti)), rreal^2*N*log(N), replace = FALSE)
M10[ran] <- M1[ran] + rnorm(length(ran))
fit1 <- softImpute(M10, rank.max = 10, lambda = 0.5)
M10 <- complete(M10, fit1)
M10 <- M00 <- matrix(NA, nrow = N, ncol = Ti)
ran <- sample(c(1:(N*Ti)), rreal^2*N*log(N), replace = FALSE)
M10[ran] <- M1[ran] + rnorm(length(ran))
fit1 <- softImpute(M10, rank.max = 10, lambda = 0.5)
M10 <- complete(M10, fit1)
sum((M1-M10)^2)
sum((M1-M10)^2) / lmin^2
ran <- sample(c(1:(N*Ti)), rreal^2*N*log(N), replace = FALSE)
M00[ran] <- M0[ran] + rnorm(length(ran))
fit2 <- softImpute(M00, rank.max = 10, lambda = 0.5)
M00 <- complete(M00, fit2)
sum((M0-M00)^2) / lmin^2
M10 <- M00 <- matrix(NA, nrow = N, ncol = Ti)
ran <- sample(c(1:(N*Ti)), rreal^2*N*log(N), replace = FALSE)
M10[ran] <- M1[ran] + rnorm(length(ran))
fit1 <- softImpute(M10, rank.max = rreal, lambda = 0.5)
M10 <- complete(M10, fit1)
sum((M1-M10)^2)
sum((M1-M10)^2) / lmin^2
ran <- sample(c(1:(N*Ti)), rreal^2*N*log(N), replace = FALSE)
M00[ran] <- M0[ran] + rnorm(length(ran))
fit2 <- softImpute(M00, rank.max = rreal, lambda = 0.5)
M00 <- complete(M00, fit2)
sum((M0-M00)^2) / lmin^2
M10 <- M00 <- matrix(NA, nrow = N, ncol = Ti)
ran <- sample(c(1:(N*Ti)), 2*rreal^2*N*log(N), replace = FALSE)
M10[ran] <- M1[ran] + rnorm(length(ran))
fit1 <- softImpute(M10, rank.max = rreal, lambda = 0.5)
M10 <- complete(M10, fit1)
sum((M1-M10)^2)
sum((M1-M10)^2) / lmin^2
ran <- sample(c(1:(N*Ti)), 2*rreal^2*N*log(N), replace = FALSE)
M00[ran] <- M0[ran] + rnorm(length(ran))
fit2 <- softImpute(M00, rank.max = rreal, lambda = 0.5)
M00 <- complete(M00, fit2)
sum((M0-M00)^2) / lmin^2
N <- Ti <- 300
rreal <- 5
set.seed(1124)
M1 <- matrix(runif(N*Ti, -1, 1), nrow = N, ncol = Ti)
M0 <- M1 + matrix(runif(N*Ti, -1, 1), nrow = N, ncol = Ti)
U1 <- svd(M1)$u[,1:rreal] %*% diag(c(sqrt(svd(M1)$d)[1:rreal]))
V1 <- svd(M1)$v[,1:rreal] %*% diag(c(sqrt(svd(M1)$d)[1:rreal]))
U0 <- svd(M0)$u[,1:rreal] %*% diag(c(sqrt(svd(M0)$d)[1:rreal]))
V0 <- svd(M0)$v[,1:rreal] %*% diag(c(sqrt(svd(M0)$d)[1:rreal]))
M1 <- U1 %*% t(V1)
M0 <- U0 %*% t(V0)
lmax <- max(svd(M1)$d[1], svd(M0)$d[1])
lmin <- min(svd(M1)$d[rreal], svd(M1)$d[rreal])
lmin^2
M10 <- M00 <- matrix(NA, nrow = N, ncol = Ti)
ran <- sample(c(1:(N*Ti)), 2*rreal^2*N*log(N), replace = FALSE)
M10[ran] <- M1[ran] + rnorm(length(ran))
fit1 <- softImpute(M10, rank.max = rreal, lambda = 0.5)
M10 <- complete(M10, fit1)
sum((M1-M10)^2)
sum((M1-M10)^2) / lmin^2
5*rreal^2*N*log(N)
M10 <- M00 <- matrix(NA, nrow = N, ncol = Ti)
ran <- sample(c(1:(N*Ti)), 5*rreal^2*N*log(N), replace = FALSE)
M10[ran] <- M1[ran]
fit1 <- softImpute(M10, rank.max = rreal, lambda = 0.5)
M10 <- M00 <- matrix(NA, nrow = N, ncol = Ti)
ran <- sample(c(1:(N*Ti)), 2*rreal^2*N*log(N), replace = FALSE)
M10[ran] <- M1[ran]
fit1 <- softImpute(M10, rank.max = rreal, lambda = 0.5)
M10 <- complete(M10, fit1)
sum((M1-M10)^2)
sum((M1-M10)^2) / lmin^2
ran <- sample(c(1:(N*Ti)), 2*rreal^2*N*log(N), replace = FALSE)
M00[ran] <- M0[ran]
fit2 <- softImpute(M00, rank.max = rreal, lambda = 0.5)
M00 <- complete(M00, fit2)
sum((M0-M00)^2) / lmin^2
M10 <- M00 <- matrix(NA, nrow = N, ncol = Ti)
ran <- sample(c(1:(N*Ti)), 2*rreal^2*N*log(N), replace = FALSE)
M10[ran] <- M1[ran]
fit1 <- softImpute(M10, rank.max = rreal, lambda = 0.5)
M10 <- complete(M10, fit1)
sum((M1-M10)^2)
sum((M1-M10)^2) / lmin^2
ran <- sample(c(1:(N*Ti)), 2*rreal^2*N*log(N), replace = FALSE)
M00[ran] <- M0[ran]
sum((M1-M10)^2)
M10 <- M00 <- matrix(NA, nrow = N, ncol = Ti)
ran <- sample(c(1:(N*Ti)), rreal^2*N*log(N), replace = FALSE)
M10[ran] <- M1[ran]
fit1 <- softImpute(M10, rank.max = rreal, lambda = 0.5)
M10 <- complete(M10, fit1)
sum((M1-M10)^2)
sum((M1-M10)^2) / lmin^2
ran <- sample(c(1:(N*Ti)), rreal^2*N*log(N), replace = FALSE)
M00[ran] <- M0[ran]
fit2 <- softImpute(M00, rank.max = rreal, lambda = 0.5)
M00 <- complete(M00, fit2)
sum((M0-M00)^2) / lmin^2
M10 <- M00 <- matrix(NA, nrow = N, ncol = Ti)
ran <- sample(c(1:(N*Ti)), 2*rreal^2*N*log(N), replace = FALSE)
M10[ran] <- M1[ran] + rnorm(length(ran))
fit1 <- softImpute(M10, rank.max = rreal, lambda = 0.5)
M10 <- complete(M10, fit1)
sum((M1-M10)^2)
sum((M1-M10)^2) / lmin^2
ran <- sample(c(1:(N*Ti)), 2*rreal^2*N*log(N), replace = FALSE)
M00[ran] <- M0[ran] + rnorm(length(ran))
fit2 <- softImpute(M00, rank.max = rreal, lambda = 0.5)
M00 <- complete(M00, fit2)
sum((M0-M00)^2) / lmin^2
M10 <- M00 <- matrix(NA, nrow = N, ncol = Ti)
ran <- sample(c(1:(N*Ti)), 2*rreal^2*N*log(N), replace = FALSE)
M10[ran] <- M1[ran] + rnorm(length(ran), 0.5)
fit1 <- softImpute(M10, rank.max = rreal, lambda = 0.5)
M10 <- complete(M10, fit1)
sum((M1-M10)^2)
sum((M1-M10)^2) / lmin^2
ran <- sample(c(1:(N*Ti)), 2*rreal^2*N*log(N), replace = FALSE)
M00[ran] <- M0[ran] + rnorm(length(ran), 0.5)
fit2 <- softImpute(M00, rank.max = rreal, lambda = 0.5)
M00 <- complete(M00, fit2)
sum((M0-M00)^2) / lmin^2
set.seed(1124)
M10 <- M00 <- matrix(NA, nrow = N, ncol = Ti)
ran <- sample(c(1:(N*Ti)), 2*rreal^2*N*log(N), replace = FALSE)
M10[ran] <- M1[ran] + rnorm(length(ran))
fit1 <- softImpute(M10, rank.max = rreal, lambda = 0.5)
M10 <- complete(M10, fit1)
sum((M1-M10)^2)
sum((M1-M10)^2) / lmin^2
ran <- sample(c(1:(N*Ti)), 2*rreal^2*N*log(N), replace = FALSE)
M00[ran] <- M0[ran] + rnorm(length(ran))
fit2 <- softImpute(M00, rank.max = rreal, lambda = 0.5)
M00 <- complete(M00, fit2)
sum((M0-M00)^2) / lmin^2
set.seed(1124)
M10 <- M00 <- matrix(NA, nrow = N, ncol = Ti)
ran <- sample(c(1:(N*Ti)), 3*rreal^2*N*log(N), replace = FALSE)
M10[ran] <- M1[ran] + rnorm(length(ran))
fit1 <- softImpute(M10, rank.max = rreal, lambda = 0.5)
ran <- sample(c(1:(N*Ti)), 3*rreal^2*N*log(N), replace = TRUE)
M10[ran] <- M1[ran] + rnorm(length(ran))
fit1 <- softImpute(M10, rank.max = rreal, lambda = 0.5)
M10 <- complete(M10, fit1)
sum((M1-M10)^2)
sum((M1-M10)^2) / lmin^2
ran <- sample(c(1:(N*Ti)), 5*rreal^2*N*log(N), replace = TRUE)
M10[ran] <- M1[ran] + rnorm(length(ran))
fit1 <- softImpute(M10, rank.max = rreal, lambda = 0.5)
M10 <- complete(M10, fit1)
sum((M1-M10)^2)
sum((M1-M10)^2) / lmin^2
ran <- sample(c(1:(N*Ti)), 5*rreal^2*N*log(N), replace = TRUE)
M00[ran] <- M0[ran] + rnorm(length(ran))
fit2 <- softImpute(M00, rank.max = rreal, lambda = 0.5)
M00 <- complete(M00, fit2)
300^3/30000
3566653/300^2
3335147/300^2
7128357/600^2
12286599/1000^2
N <- Ti <- 300
rreal <- 5
set.seed(1124)
M1 <- matrix(runif(N*Ti, -100, 100), nrow = N, ncol = Ti)
M0 <- M1 + matrix(runif(N*Ti, -1, 1), nrow = N, ncol = Ti)
U1 <- svd(M1)$u[,1:rreal] %*% diag(c(sqrt(svd(M1)$d)[1:rreal]))
V1 <- svd(M1)$v[,1:rreal] %*% diag(c(sqrt(svd(M1)$d)[1:rreal]))
U0 <- svd(M0)$u[,1:rreal] %*% diag(c(sqrt(svd(M0)$d)[1:rreal]))
V0 <- svd(M0)$v[,1:rreal] %*% diag(c(sqrt(svd(M0)$d)[1:rreal]))
M1 <- U1 %*% t(V1)
M0 <- U0 %*% t(V0)
lmax <- max(svd(M1)$d[1], svd(M0)$d[1])
lmin <- min(svd(M1)$d[rreal], svd(M1)$d[rreal])
lmin^2
set.seed(1124)
M10 <- M00 <- matrix(NA, nrow = N, ncol = Ti)
ran <- sample(c(1:(N*Ti)), 5*rreal^2*N*log(N), replace = TRUE)
M10[ran] <- M1[ran] + rnorm(length(ran))
fit1 <- softImpute(M10, rank.max = rreal, lambda = 0.5)
M10 <- complete(M10, fit1)
sum((M1-M10)^2)
sum((M1-M10)^2) / lmin^2
ran <- sample(c(1:(N*Ti)), 5*rreal^2*N*log(N), replace = TRUE)
M00[ran] <- M0[ran] + rnorm(length(ran))
fit2 <- softImpute(M00, rank.max = rreal, lambda = 0.5)
M00 <- complete(M00, fit2)
sum((M0-M00)^2) / lmin^2
ran <- sample(c(1:(N*Ti)), 0.5*rreal^2*N*log(N), replace = TRUE)
M10[ran] <- M1[ran] + rnorm(length(ran))
fit1 <- softImpute(M10, rank.max = rreal, lambda = 0.5)
M10 <- complete(M10, fit1)
M10 <- M00 <- matrix(NA, nrow = N, ncol = Ti)
ran <- sample(c(1:(N*Ti)), 0.5*rreal^2*N*log(N), replace = TRUE)
M10[ran] <- M1[ran] + rnorm(length(ran))
fit1 <- softImpute(M10, rank.max = rreal, lambda = 0.5)
M10 <- complete(M10, fit1)
sum((M1-M10)^2)
sum((M1-M10)^2) / lmin^2
ran <- sample(c(1:(N*Ti)), 0.5*rreal^2*N*log(N), replace = TRUE)
M00[ran] <- M0[ran] + rnorm(length(ran))
fit2 <- softImpute(M00, rank.max = rreal, lambda = 0.5)
M00 <- complete(M00, fit2)
sum((M0-M00)^2) / lmin^2
set.seed(1124)
M10 <- M00 <- matrix(NA, nrow = N, ncol = Ti)
ran <- sample(c(1:(N*Ti)), 0.5*rreal^2*N*log(N), replace = TRUE)
M10[ran] <- M1[ran] + rnorm(length(ran))
fit1 <- softImpute(M10, rank.max = rreal, lambda = 0.5)
M10 <- complete(M10, fit1)
sum((M1-M10)^2)
sum((M1-M10)^2) / lmin^2
ran <- sample(c(1:(N*Ti)), 0.5*rreal^2*N*log(N), replace = TRUE)
M00[ran] <- M0[ran] + rnorm(length(ran))
fit2 <- softImpute(M00, rank.max = rreal, lambda = 0.5)
M00 <- complete(M00, fit2)
sum((M0-M00)^2) / lmin^2
